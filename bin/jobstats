#!/bin/bash
# sacct for userid and X days ago
#
#last modified 2021-06-02 (Frahm, Monaghan)
#
function usage()
{
        cat <<EOF
Purpose: This function shows statistics for each job
run by a specified user over N days.

Usage: jobstats [userid] [days, default 5]
Hint: jobstats ralphie 15
EOF
}

while getopts "h" options; do
     usage
     exit 1
done

if [ $# -eq 0 ]
  then
    usage
    exit 1
fi

# Test for no Slurm module or native slurm
if [[ $(which squeue 2>&1 |grep "no squeue") ]];
  then
    echo "Slurm required, please load a Slurm module and try again."
    exit 1
fi

if [[ -z $2 ]]; then days=5; else days=$2;fi


echo "job stats for user $1 over past $2 days"
echo "jobid        jobname  partition    qos          account      cpus state    start-date-time     elapsed    wait"
echo "-------------------------------------------------------------------------------------------------------------------"

sacct --user=$1 --starttime=`date +%Y-%m-%d -d "$days days ago"` --format=jobid,jobname,partition,qos,account,alloccpus,state,submit,start,elapsed |grep -v batch |grep -v extern |grep -v proxy |grep -v Unknown |grep -v Submit |grep -v "\-\-\-" > tempfilejs.txt
input=tempfilejs.txt

while read line
do
time1=$(echo $line | cut -d' ' -f8 |sed 's/T/ /g')
time2=$(echo $line | cut -d' ' -f9 |sed 's/T/ /g')
echo "$(echo $line | awk '{printf "%-12.12s %-8.8s %-12.12s %-12.12s %-12.12s %-4.4s %-8.8s %-19.19s %-10.10s\n", $1,$2,$3,$4,$5,$6,$7,$9,$10}') $(( $(( $(date -d "$time1" '+%s') - $(date -d "$time2" '+%s') )) / -3600)) hrs"
done < "$input"
rm tempfilejs.txt
